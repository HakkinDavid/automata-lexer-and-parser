digraph lexer {
    rankdir=LR;
    size="12,8"

    node [shape=point]; qi
    node [shape=circle];
    qi -> q_0 // q_0 es el estado inicial, qi es un punto invisible del que llega una flecha
    q_0 -> q_i [label="i"]
    q_0 -> q_m [label="m"]
    q_0 -> q_c [label="c"]
    q_0 -> q_w [label="w"]
    q_0 -> q_e [label="e"]
    q_0 -> q_digit [label="0...9"]
    q_0 -> q_id [label="a...h, j...l, n...z, A...Z"] // letras no reservadas
    q_0 -> q_eq [label="="]
    q_0 -> q_op [label="+, -, *, /"]
    q_0 -> q_lt [label="<"]
    q_0 -> q_gt [label=">"]
    q_0 -> q_sym [label="(, ), {, }, ;"]

    // palabra clave: int
    q_i -> q_in [label="n"]
    q_in -> q_int [label="t"]
    q_int -> q_id [label="a...z, A...Z, 0...9"]
    q_int -> q_0 [label="espaciado"]

    // palabra clave: if
    q_i -> q_if [label="f"]
    q_if -> q_id [label="a...z, A...Z, 0...9"]
    q_if -> q_0 [label="espaciado"]

    // palabra clave: main
    q_m -> q_ma [label="a"]
    q_ma -> q_mai [label="i"]
    q_mai -> q_main [label="n"]
    q_main -> q_id [label="a...z, A...Z, 0...9"]
    q_main -> q_0 [label="espaciado"]

    // palabra clave: cin
    q_c -> q_ci [label="i"]
    q_ci -> q_cin [label="n"]
    q_cin -> q_id [label="a...z, A...Z, 0...9"]
    q_cin -> q_0 [label="espaciado"]

    // palabra clave: cout
    q_ci -> q_cio [label="o"]
    q_cio -> q_ciou [label="u"]
    q_ciou -> q_cout [label="t"]
    q_cout -> q_id [label="a...z, A...Z, 0...9"]
    q_cout -> q_0 [label="espaciado"]

    // palabra clave: while
    q_w -> q_wh [label="h"]
    q_wh -> q_whi [label="i"]
    q_whi -> q_whil [label="l"]
    q_whil -> q_while [label="e"]
    q_while -> q_id [label="a...z, A...Z, 0...9"]
    q_while -> q_0 [label="espaciado"]

    // palabra clave: else
    q_e -> q_el [label="l"]
    q_el -> q_els [label="s"]
    q_els -> q_else [label="e"]
    q_else -> q_id [label="a...z, A...Z, 0...9"]
    q_else -> q_0 [label="espaciado"]

    // identificadores genéricos
    q_id -> q_id [label="a...z, A...Z, 0...9"]
    q_i -> q_id [label="a...h, j...z"]
    q_in -> q_id [label="a...z, A...Z, 0...9"]
    q_m -> q_id [label="b...z"]
    q_ma -> q_id [label="a...z, A...Z, 0...9"]
    q_mai -> q_id [label="a...z, A...Z, 0...9"]
    q_c -> q_id [label="a...z, A...Z, 0...9"]
    q_ci -> q_id [label="a...z, A...Z, 0...9"]
    q_cio -> q_id [label="a...z, A...Z, 0...9"]
    q_ciou -> q_id [label="a...z, A...Z, 0...9"]
    q_w -> q_id [label="a...z, A...Z, 0...9"]
    q_wh -> q_id [label="a...z, A...Z, 0...9"]
    q_whi -> q_id [label="a...z, A...Z, 0...9"]
    q_whil -> q_id [label="a...z, A...Z, 0...9"]
    q_e -> q_id [label="a...z, A...Z, 0...9"]
    q_el -> q_id [label="a...z, A...Z, 0...9"]
    q_els -> q_id [label="a...z, A...Z, 0...9"]
    q_id [shape=doublecircle]
    q_id -> q_0 [label="espaciado"]

    // números enteros
    q_digit -> q_digit [label="0...9"]
    q_digit [shape=doublecircle]
    q_digit -> q_0 [label="espaciado"]

    // operadores
    q_eq -> q_eq_eq [label="="]
    q_eq [shape=doublecircle] // "="
    q_eq -> q_0 [label="espaciado"]
    q_eq_eq [shape=doublecircle] // "=="
    q_eq_eq -> q_0 [label="espaciado"]

    q_op [shape=doublecircle] // "+", "-", "*", "/"
    q_op -> q_0 [label="espaciado"]

    // comparación y desplazamiento
    q_lt -> q_shift_left [label="<"]
    q_lt [shape=doublecircle] // "<"
    q_lt -> q_0 [label="espaciado"]
    q_shift_left [shape=doublecircle] // "<<"
    q_shift_left -> q_0 [label="espaciado"]

    q_gt -> q_shift_right [label=">"]
    q_gt [shape=doublecircle] // ">"
    q_gt -> q_0 [label="espaciado"]
    q_shift_right [shape=doublecircle] // ">>"
    q_shift_right -> q_0 [label="espaciado"]

    // símbolos
    q_sym [shape=doublecircle]
    q_sym -> q_0 [label="espaciado"]
}